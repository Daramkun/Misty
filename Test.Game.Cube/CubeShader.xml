<?xml version="1.0" encoding="utf-8" ?>
<shaders xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://daram.pe.kr/SxmlSchema.xsd">
  <language type="glsl" version="1.2" option="i_pos,i_col">
    <shader type="vertex">
      <![CDATA[
attribute vec3 i_pos;
attribute vec4 i_col;

uniform mat4 projMatrix;
uniform mat4 viewMatrix;
uniform mat4 worldMatrix;

varying vec4 o_col;

void main () {
    vec4 pos = vec4(i_pos, 1);
    //vec4 pos = vec4(i_pos, 1);
    pos = worldMatrix * pos;
    pos = viewMatrix * pos;
    pos = projMatrix * pos;
    gl_Position = pos;
    o_col = i_col;
}
    ]]>
    </shader>
    <shader type="pixel">
      <![CDATA[
varying vec4 o_col;

void main () {
    gl_FragColor = o_col;
}    
    ]]>
    </shader>
  </language>

  <language type="hlsl" version="2.0">
    <shader type="vertex">
      <![CDATA[
float4x4 projMatrix;
float4x4 viewMatrix;
float4x4 worldMatrix;

struct VS_INPUT
{
    float3 i_pos : POSITION;
    float4 i_col : COLOR;
};

struct PS_INPUT
{
    float4 o_pos : POSITION;
    float4 o_col : COLOR;
};

PS_INPUT vs_main(VS_INPUT v) {
    PS_INPUT p;
    p.o_pos = mul(float4(v.i_pos, 1), worldMatrix);
    p.o_pos = mul(p.o_pos, viewMatrix);
    p.o_pos = mul(p.o_pos, projMatrix);
    p.o_col = v.i_col;
    return p;
}
    ]]>
    </shader>
    <shader type="pixel">
      <![CDATA[
struct PS_INPUT
{
    float4 o_pos : POSITION;
    float4 o_col : COLOR;
};
  
float4 ps_main(PS_INPUT p) : COLOR {
   return p.o_col;
}
    ]]>
    </shader>
  </language>
</shaders>